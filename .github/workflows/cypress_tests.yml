name: Run cypress happy path test

on:
  workflow_dispatch:

jobs:
  build:
    environment: e2e_tests
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    env:
      JWT_SECRET: This_will_(really)_work
      JWT_INVITE_SECRET: Any_arbitrary_string_will_do
      JWT_RESET_SECRET: Production_is_secured_with_a_long_random_string
      JWT_FARM_SECRET: Here_we_can_use_friendly_explanations
      JWT_SCHEDULER_SECRET: Another_token_was_needed_for_the_scheduler
      # TEST_USER: ${{secrets.TEST_USER}}
      # TEST_USER_ID: ${{secrets.TEST_USER_ID}}
      DEV_DATABASE_HOST: localhost
      DEV_DATABASE: pg-litefarm
      DEV_DATABASE_USER: postgres
      DEV_DATABASE_PASSWORD: postgres
      GOOGLE_API_KEY: ${{secrets.GOOGLE_API_KEY}}
      # VITE_GOOGLE_MAPS_API_KEY: ${{secrets.VITE_GOOGLE_MAPS_API_KEY}}
      # VITE_WEATHER_API_KEY: ${{secrets.VITE_WEATHER_API_KEY}}
      NODE_ENV: development

    strategy:
      matrix:
        node-version: [16.15.0]

    steps:
      - uses: ikalnytskyi/action-setup-postgres@v3
        with:
          username: ${{env.DEV_DATABASE_USER}}
          password: ${{env.DEV_DATABASE_PASSWORD}}
          database: ${{env.DEV_DATABASE}}
          port: 5432

      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run API in background
        working-directory: packages/api
        run: |
          npm ci && cd ../shared && npm ci
          cd ../api && npm run migrate:dev:db
          npm run start &
        env:
          PORT: 5000

      - uses: pnpm/action-setup@v2
        with:
           version: latest
      - name: Run Webapp
        working-directory: packages/webapp
        run: |
          pnpm install --config.auto-install-peers=true --no-frozen-lockfile --force
          pnpm dev &
        env:
          VITE_WEATHER_API_KEY: ${{secrets.VITE_WEATHER_API_KEY}}
          VITE_ENV: development
          VITE_GOOGLE_OAUTH_CLIENT_ID: ${{secrets.VITE_GOOGLE_OAUTH_CLIENT_ID}}
          VITE_DO_BUCKET_NAME: litefarm
          NODE_ENV: development
          VITE_API_URL: http://localhost:5000
          
      - name: Run E2E test
        continue-on-error: true
        env:
          VITE_WEATHER_API_KEY: ${{secrets.VITE_WEATHER_API_KEY}}
          VITE_ENV: development
          VITE_GOOGLE_OAUTH_CLIENT_ID: ${{secrets.VITE_GOOGLE_OAUTH_CLIENT_ID}}
          VITE_DO_BUCKET_NAME: litefarm
          NODE_ENV: development
          VITE_API_URL: http://localhost:5000
          CYPRESS_RECORD_KEY: "c0685451-2bc1-404e-884e-bfd4699520b2"
          CYPRESS_USER: 0
        uses: cypress-io/github-action@v4.2.0
        with:
          working-directory: packages/end-to-end
          headed: true
          browser: chrome
          record: true
          parallel: true
          group: "UI - Chrome"
          
      - name: Archive backend logs
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: packages/api/logs
          
      - name: set code coverage badge
        run: npx -p check-code-coverage update-badge --from '${GITHUB_WORKSPACE}/packages/webapp/coverage/coverage-summary.json'
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          working-directory: packages/webapp
          path: coverage/coverage-summary.json

      - name: Set code coverage commit status
        continue-on-error: true
        working-directory: packages/webapp
        run: npx set-gh-status
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GH_SHA: ${{ github.event.after }}
